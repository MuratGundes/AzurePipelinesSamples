parameters:
  
  - name: name
    type: string
    default: 'Publish_NuGet'

  - name: dependsOn
    default: any  

  - name: nugetVersionEnv
    type: string

  - name: condition
    default: succeeded()  

jobs:
  ####################################################
  #   JOB 3: Publish Pre-release NuGet
  ####################################################
  - job: ${{ parameters.name }}
    dependsOn: ${{ parameters.dependsOn }}
    condition: ${{ parameters.condition }}
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
      ################################################
      # Step 0: No checkout as we're getting
      #         built code from artifacts
      ################################################
      - checkout: none

      ################################################
      # Step 1: Get built source code
      #         from build artifacts
      ################################################
      - task: DownloadBuildArtifacts@0
        displayName: 'Download Built Source Code'
        inputs:
          artifactName: BuiltSourceCode
          downloadPath: $(Build.SourcesDirectory)

      ################################################
      # Step 2: Create alpha NuGet package
      ################################################
      - task: DotNetCoreCLI@2
        displayName: Pack
        inputs:
          command: pack
          projects: '$(Build.SourcesDirectory)/BuiltSourceCode/$(solution_path)'
          arguments: '--configuration $(config)'
          packDestination: '$(Build.ArtifactStagingDirectory)'
          includeSymbols: true
          versioningScheme: 'byEnvVar'
          versionEnvVar: ${{ parameters.nugetVersionEnv }}

      ################################################
      # Step 3: Publish NuGet package
      ################################################
      - task: NuGetCommand@2
        displayName: Publish packages to NuGet
        inputs:
          command: 'push'
          nuGetFeedType: 'external'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
          publishFeedCredentials: 'NuGet'
